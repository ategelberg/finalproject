# Generate list of dataframes of location names for each of the coordinates
location_lists <- lapply(with(coords, paste(Latitude, Longitude, sep = ",")), geocode, output = "more")
# convert lists to dataframe
location_df <- bind_rows(location_lists, .id = "column_label")
View(location_lists)
# convert lists to dataframe
location_df <- bind_rows(location_lists, .id = "column_label")
View(location_lists)
# practice removing empty dataframes from list before converting full list to df
list_practice <- Filter(function(x) dim(x)[1] > 0, location_lists)
View(list_practice)
# convert lists to dataframe
location_df <- bind_rows(list_practice, .id = "column_label")
View(location_df)
# practice removing empty dataframes from list before converting full list to df
location_lists <- Filter(function(x) dim(x)[1] > 0, location_lists)
# convert lists to dataframe
location_df <- bind_rows(location_lists, .id = "column_label")
# change location_df column name to match extinct_lang for joining
location_df <- rename(res_2, Latitude = lat)
# Join location_df and extinct_lang for df with location names for each coordinate
languages_final <- left_join(extinct_lang, location_df, by = "Latitude")
View(languages_final)
View(languages_final)
View(location_df)
# convert lists to dataframe
location_df <- bind_rows(location_lists, .id = "column_label")
View(location_df)
location_df <- location_df %>%
select(country,
administrative_area_level_3,
administrative_area_level_2,
administrative_area_level_1,
locality,
state)
location_df <- location_df %>%
select(country,
administrative_area_level_3,
administrative_area_level_2,
administrative_area_level_1,
locality)
View(location_df)
location_df <- location_df %>%
select(country,
locality,
administrative_area_level_1,
administrative_area_level_2,
administrative_area_level_3)
View(location_df)
location_df <- rename(res_2, Latitude = lat)
View(location_df)
# convert lists to dataframe
location_df <- bind_rows(location_lists, .id = "column_label")
View(location_df)
location_df <- location_df %>%
select(lon,
lat,
country,
locality,
administrative_area_level_1,
administrative_area_level_2,
administrative_area_level_3)
View(location_df)
# change location_df column name to match extinct_lang for joining
location_df <- rename(res_2, Latitude = lat)
View(location_df)
View(location_df)
# convert lists to dataframe
location_df <- bind_rows(location_lists, .id = "column_label")
location_df <- location_df %>%
select(lon,
lat,
country,
locality,
administrative_area_level_1,
administrative_area_level_2,
administrative_area_level_3)
View(location_df)
df <- rename(location_df, Latitude = lat)
View(df)
location_df <- rename(location_df, Latitude = lat)
View(location_df)
# Join location_df and extinct_lang for df with location names for each coordinate
languages_final <- left_join(extinct_lang, location_df, by = "Latitude")
View(languages_final)
# Join location_df and extinct_lang for df with location names for each coordinate
languages_final <- full_join(extinct_lang, location_df, by = "Latitude")
View(languages_final)
View(coords)
# Join location_df and extinct_lang for df with location names for each coordinate
languages_final <- left_join(extinct_lang, location_df)
View(languages_final)
# Generate list of dataframes with location names for each of the coordinates
location_lists <- lapply(with(coords, paste(Name.in.English, Latitude, Longitude, sep = ",")),
geocode, output = "more")
# Create dataset with only coordinates of languages
coords <- extinct_lang %>%
select("Name.in.English", "Latitude", "Longitude") %>%
filter(Name.in.English == "South Italian")
View(coords)
location_lists <- lapply(with(coords, paste(Name.in.English, Latitude, Longitude, sep = ",")),
geocode, output = "more")
View(location_lists)
View(location_lists)
# Create dataset with only coordinates of languages
coords <- extinct_lang %>%
select("Name.in.English", "Latitude", "Longitude") %>%
filter(Name.in.English == "South Italian") %>%
rename(lat = Latitude, lon = Longitude)
coords <- extinct_lang %>%
select("Name.in.English", "Latitude", "Longitude") %>%
filter(Name.in.English == "South Italian") %>%
rename(lat = Latitude, lon = Longitude)
View(coords)
# practice stuff
list <- revgeocode(c(coords$lon, coords$lat))
View(list)
# practice stuff
coords$textAddress <- mapply(FUN = function(lon, lat) revgeocode(c(lon, lat)),
coords$lon, coords$lat)
# Generate list of dataframes with location names for each of the coordinates
location_lists <- lapply(with(coords, paste(Name.in.English, Latitude, Longitude, sep = ",")),
geocode, output = "more")
View(coords)
?revgeocode
# practice stuff
coords$location <- mapply(FUN = function(lon, lat) revgeocode(c(lon, lat), output = "more"),
coords$lon, coords$lat)
View(coords)
View(coords)
View(coords)
coords2 <- revgeocode(coords, output = c("more"))
result <- do.call(rbind,
lapply(1:nrow(coords),
function(i)revgeocode(as.numeric(coords[i,3:2]))))
result <- do.call(rbind,
lapply(1:nrow(coords),
function(i)revgeocode(as.numeric(coords[i,2:3]))))
View(result)
coords <- cbind(coords,result)
View(coords)
coords <- extinct_lang %>%
select("Name.in.English", "Latitude", "Longitude") %>%
filter(Name.in.English == "South Italian") %>%
rename(lat = Latitude, lon = Longitude)
result <- do.call(rbind,
lapply(1:nrow(coords),
function(i)revgeocode(as.numeric(coords[i,2:3]))))
coords <- cbind(coords,result)
View(coords)
coords <- extinct_lang %>%
select("Name.in.English", "Longitude", "Latitude") %>%
filter(Name.in.English == "South Italian")
View(coords)
result <- do.call(rbind,
lapply(1:nrow(coords),
function(i)revgeocode(as.numeric(coords))))
result <- do.call(rbind,
lapply(1:nrow(coords),
function(i)revgeocode(as.numeric(coords[i, 2:3]))))
is.numeric(coords)
coords <- extinct_lang %>%
select("Longitude", "Latitude") %>%
filter("Longitude" == "15.249")
View(coords)
coords <- extinct_lang %>%
select("Longitude", "Latitude")
View(coords)
is.numeric(coords)
as.numeric(coords)
as.numeric(as.character(coords$Longitude))
coords <- as.numeric(as.character(coords$Longitude))
View(coords)
coords <- as.numeric(as.character(coords$Longitude, coords$Latitude))
coords <- extinct_lang %>%
select("Longitude", "Latitude")
View(coords)
coords <- extinct_lang %>%
select("Longitude", "Latitude") %>%
filter(Longitude == "15.2490")
View(coords)
coords <- extinct_lang %>%
select("Longitude", "Latitude")
# Create dataset with only coordinates of languages
coords <- extinct_lang %>%
select("Longitude", "Latitude") %>%
filter(Latitude == "37.4399")
View(coords)
# practice stuff
geo_information <- revgeocode(c(coords$Longitude, coords$Latitude), output = "more")
View(geo_information)
# practice stuff
geo_information <- revgeocode(c(coords$Longitude, coords$Latitude), output = "all")
# practice stuff
geo_information <- revgeocode(c(coords$Longitude, coords$Latitude), output = "all")
View(geo_information)
# practice stuff
geo_information <- revgeocode(c(coords$Longitude, coords$Latitude), output = "more")
View(geo_information)
is.data.frame(geo_information)
coords <- cbind(coords,geo_information)
View(coords)
coords <- extinct_lang %>%
select("ID", "Longitude", "Latitude") %>%
filter(Latitude == "37.4399")
View(coords)
coords <- extinct_lang %>%
select("Countries", "Longitude", "Latitude") %>%
filter(Countries == "Bhutan")
View(coords)
# practice stuff
geo_information <- revgeocode(c(coords$Longitude, coords$Latitude),
output = "more")
coords <- extinct_lang %>%
select("Longitude", "Latitude")
coords <- extinct_lang %>%
select("ID", "Longitude", "Latitude")
View(coords)
coords <- extinct_lang %>%
select("ID", "Longitude", "Latitude") %>%
filter(ID == "1022", "1033", "383")
coords <- extinct_lang %>%
select("ID", "Longitude", "Latitude") %>%
filter(ID == "383")
View(coords)
# practice stuff
geo_information <- revgeocode(c(coords$Longitude, coords$Latitude),
output = "more")
View(geo_information)
coords <- cbind(coords, geo_information)
View(coords)
coords <- extinct_lang %>%
select("ID", "Longitude", "Latitude")
geo_information <- revgeocode(c(coords$Longitude, coords$Latitude),
output = "more")
coords <- extinct_lang %>%
select("Longitude", "Latitude")
geo_information <- revgeocode(c(coords$Longitude, coords$Latitude),
output = "more")
as.numeric(coords)
result <- do.call(rbind,
lapply(1:nrow(coords)
View(result)
coords <- extinct_lang %>%
select("Longitude", "Latitude")
result <- do.call(rbind,lapply(1:nrow(coords),
function(i)revgeocode(as.numeric(coords[i, 2:3]))))
result <- do.call(rbind,lapply(1:nrow(coords),
function(i)revgeocode(as.numeric(coords$Longitude, coords$Latitude))))
coords_numeric <- transform(coords, Latitude = as.numeric(Latitude))
View(coords_numeric)
oords <- extinct_lang %>%
select("Longitude", "Latitude") %>%
mutate(coordinates = Longitude, Latitude)
coords <- extinct_lang %>%
select("Longitude", "Latitude") %>%
mutate(coordinates = Longitude, Latitude)
View(coords)
coords <- extinct_lang %>%
select("Longitude", "Latitude") %>%
mutate(coordinates = Longitude + Latitude)
View(coords)
coords <- extinct_lang %>%
select("Longitude", "Latitude") %>%
mutate(coordinates = (paste(Longitude, Latitude)))
View(coords)
coords <- extinct_lang %>%
select("Longitude", "Latitude") %>%
mutate(coordinates = (paste(Longitude, ,Latitude)))
coords <- extinct_lang %>%
select("Longitude", "Latitude") %>%
mutate(coordinates = (paste(Longitude, Latitude)))
coords_numeric <- transform(coords, Coordinates = as.numeric(Coordinates))
coords_numeric <- transform(coords, coordinates = as.numeric(coordinates))
coords_numeric
is.numeric(coords$Longitude)
is.numeric(coords$Latitude)
?as.numeric()
coords <- extinct_lang %>%
select("Longitude", "Latitude")
is.numeric(coords$Longitude)
geo_information <- revgeocode(c(coords$Longitude, coords$Latitude),
output = "more")
coords_numeric <- transform(coords, Longitude = as.numeric(Longitude))
coords <- transform(coords, Longitude = as.numeric(Longitude))
coords <- transform(coords, Latitude = as.numeric(Latitude))
geo_information <- revgeocode(c(coords$Longitude, coords$Latitude),
output = "more")
coords <- extinct_lang %>%
select("ID", "Longitude", "Latitude")
View(coords)
result <- do.call(rbind,
lapply(1:nrow(coords),
function(i), revgeocode(as.numeric(coords[i, 3:2]))))
result <- do.call(rbind,
lapply(1:nrow(coords),
function(i)revgeocode(as.numeric(coords[i, 3:2]))))
View(result)
?revgeocode
result <- do.call(rbind,
lapply(1:nrow(coords),
function(i)revgeocode(as.numeric(coords[i, 3:2]),
output = c("more"))))
View(coords)
coords <- extinct_lang %>%
select("ID", "Longitude", "Latitude") %>%
filter(ID == "1022")
View(coords)
result <- do.call(rbind,
lapply(1:nrow(coords),
function(i)revgeocode(as.numeric(coords[i, 3:2]),
output = c("more"))))
coords <- extinct_lang %>%
select("ID", "Longitude", "Latitude")
View(coords)
coords <- extinct_lang %>%
select("ID", "Longitude", "Latitude") %>%
filter(ID == "405")
View(coords)
result <- do.call(rbind,
lapply(1:nrow(coords),
function(i)revgeocode(as.numeric(coords[i, 3:2]),
output = c("more"))))
View(result)
data <- cbind(coords,result)
View(data)
coords <- extinct_lang %>%
select("ID", "Longitude", "Latitude") %>%
filter(ID == "1586")
result <- do.call(rbind,
lapply(1:nrow(coords),
function(i)revgeocode(as.numeric(coords[i, 3:2]),
output = c("more"))))
data <- cbind(coords,result)
View(data)
# Load in files
extinct_lang <- read.csv("../data/extinctlanguages.csv", stringsAsFactors = F)
coords <- extinct_lang %>%
select("ID", "Longitude", "Latitude")
geo_information <- do.call(rbind,
lapply(1:nrow(coords),
function(i)revgeocode(as.numeric(coords[i, 3:2]),
output = c("more"))))
View(coords)
View(geo_information)
library(dplyr)
library(ggmap)
# Load in files
extinct_lang <- read.csv("../data/extinctlanguages.csv", stringsAsFactors = F)
coords <- extinct_lang %>%
select("ID", "Longitude", "Latitude")
View(coords)
geo_information <- do.call(rbind,
lapply(1:nrow(coords),
function(i)revgeocode(as.numeric(coords[i, 3:2]),
output = c("more"))))
View(geo_information)
View(geo_information)
coords <- extinct_lang %>%
select("ID", "Longitude", "Latitude")
View(coords)
geo_information <- do.call(rbind,
lapply(1:nrow(coords),
function(i)revgeocode(as.numeric(coords[i, 3:2]),
output = c("more"))))
warnings()
View(geo_information)
# Load in libraries
library(dplyr)
# Load in files
extinct_lang <- read.csv("../data/extinctlanguages.csv", stringsAsFactors = F)
cities <- read.csv("../data/cities.csv", stringsAsFactors = F)
View(cities)
View(cities)
View(cities)
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5") %>%
rename(X = "country")
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5") %>%
rename(X = country)
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5")
View(cities)
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5") %>%
rename(country = X)
View(cities)
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5") %>%
rename(country = X, region = X.1, city = X.2, latitude = X.4, longitude = X.5)
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5") %>%
rename(country = X, region = X.1, city = X.2, latitude = X.4, longitude = X.5)
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5")
cities <- read.csv("../data/cities.csv", stringsAsFactors = F)
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5") %>%
rename(country = X, region = X.1, city = X.2, latitude = X.4, longitude = X.5)
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5") %>%
rename(country = X, region = X.1, city = X.2, latitude = X.4, longitude = X.5)
# Load in libraries
library(dplyr)
# Load in files
extinct_lang <- read.csv("../data/extinctlanguages.csv", stringsAsFactors = F)
cities <- read.csv("../data/cities.csv", stringsAsFactors = F)
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5") %>%
rename(country = X, region = X.1, city = X.2, latitude = X.4, longitude = X.5)
View(cities)
View(extinct_lang)
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5") %>%
rename(Country = X, Region = X.1, City = X.2, Latitude = X.4, Longitude = X.5)
# Load in libraries
library(dplyr)
# Load in files
extinct_lang <- read.csv("../data/extinctlanguages.csv", stringsAsFactors = F)
cities <- read.csv("../data/cities.csv", stringsAsFactors = F)
# Load in files
extinct_lang <- read.csv("../data/extinctlanguages.csv", stringsAsFactors = F)
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5") %>%
rename(Country = X, Region = X.1, City = X.2, Latitude = X.4, Longitude = X.5)
# Join dataframes to match latitude and longitude
left_join(extinct_lang, cities)
is.numeric(cities)
is.numeric(extinct_lang)
is.numeric(extinct_lang$Latitude)
is.numeric(cities$Latitude)
as.numeric(cities$Latitude)
is.numeric(cities$Latitude)
# Make cities numeric for merging
cities_numeric <- transform(cities, Latitude = as.numeric(Latitude))
?as.character()
# Make cities numeric for merging
cities_numeric <- transform(extinct_lang, Latitude = as.character(Latitude))
# Make cities numeric for merging
extinct_lang_char <- transform(extinct_lang, Latitude = as.character(Latitude))
View(extinct_lang_char)
is.character(extinct_lang_char$Latitude)
is.character(cities$Latitude)
# Make cities numeric for merging
extinct_lang <- transform(extinct_lang, Latitude = as.character(Latitude))
is.character(extinct_lang$Latitude)
# Join dataframes to match latitude and longitude
left_join(extinct_lang, cities)
extinct_lang <- transform(extinct_lang, Longitude = as.character(Longitude))
is.character(extinct_lang$Longitude)
is.character(cities$Longitude)
# Join dataframes to match latitude and longitude
left_join(extinct_lang, cities)
# Join dataframes to match latitude and longitude
df <- left_join(extinct_lang, cities)
View(df)
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5") %>%
rename(Country = X, Region = X.1, City = X.2, Latitude = X.4, Longitude = X.5) %>%
mutate(Latitude = round(Latitude, 1), Longitude = round(Longitude, 1))
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5") %>%
rename(Country = X, Region = X.1, City = X.2, Latitude = X.4, Longitude = X.5) %>%
mutate(Latitude = round(Latitude, 1), Longitude = round(Longitude, 1))
cities <- read.csv("../data/cities.csv", stringsAsFactors = F)
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5") %>%
rename(Country = X, Region = X.1, City = X.2, Latitude = X.4, Longitude = X.5) %>%
mutate(Latitude = round(Latitude, 1), Longitude = round(Longitude, 1))
# Make extinct_lang$latitude character for merging
extinct_lang <- transform(extinct_lang, Latitude = as.numeric(Latitude))
# Load in files
extinct_lang <- read.csv("../data/extinctlanguages.csv", stringsAsFactors = F)
# Make extinct_lang$latitude character for merging
extinct_lang <- transform(extinct_lang, Latitude = as.numeric(Latitude))
extinct_lang <- transform(extinct_lang, Longitude = as.numeric(Longitude))
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5") %>%
rename(Country = X, Region = X.1, City = X.2, Latitude = X.4, Longitude = X.5)
is.numeric(cities$Longitude)
# Make extinct_lang$latitude character for merging
extinct_lang <- transform(extinct_lang, Latitude = as.numeric(Latitude))
extinct_lang <- transform(extinct_lang, Longitude = as.numeric(Longitude))
is.numeric(cities$Latitude)
?as.numeric
# Parse down dataframe
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5") %>%
rename(Country = X, Region = X.1, City = X.2, Latitude = X.4, Longitude = X.5) %>%
mutate(Latitude = round(Latitude, 1), Longitude = round(Longitude, 1))
# Load in libraries
library(dplyr)
# Load in libraries
library(dplyr)
# Load in files
extinct_lang <- read.csv("../data/extinctlanguages.csv", stringsAsFactors = F)
cities <- read.csv("../data/cities.csv", stringsAsFactors = F)
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5") %>%
rename(Country = X, Region = X.1, City = X.2, Latitude = X.4, Longitude = X.5) %>%
mutate(Latitude = round(Latitude, 1), Longitude = round(Longitude, 1))
cities <- cities %>%
select("X", "X.1", "X.2", "X.4", "X.5") %>%
rename(Country = X, Region = X.1, City = X.2, Latitude = X.4, Longitude = X.5)
cities <- mutate(cities, Latitude = round(Latitude, 1),
Longitude = round(Longitude, 1))
is.numeric(cities$Longitude)
is.numeric(cities$Latitude)
is.numeric(extinct_lang$Latitude)
is.numeric((extinct_lang$Longti))
is.numeric(extinct_lang$Longitude)
